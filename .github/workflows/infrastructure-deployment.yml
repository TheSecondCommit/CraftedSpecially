on: [
  workflow_dispatch
]
name: CraftedSpecially infrastructure deployment
jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file
    - name: Deploy bicep to Azure
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az config set bicep.use_binary_from_path=False
          az deployment sub create \
          --location westeurope \
          --template-file ./Infrastructure/CraftedSpecially.bicep \

  setup-namespaces:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: 'CraftedSpecially' 
        cluster-name: 'aks'
    
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Deploy to AKS
      id: deploy-aks
      uses: Azure/k8s-deploy@v4
      with:
        namespace: 'default'
        manifests: |
            ./Services/cluster-setup.yml
  
  deploy-continuous-validation:
    runs-on: ubuntu-latest
    needs: setup-namespaces
    environment: Release
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: 'CraftedSpecially' 
        cluster-name: 'aks'
    
    - uses: azure/setup-helm@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
      id: install-helm
    
    - name: Add Chaos Mesh repo
      run: helm repo add chaos-mesh https://charts.chaos-mesh.org

    - name: Install Chaos Mesh
      run: helm install chaos-mesh chaos-mesh/chaos-mesh -n=chaos-mesh --set chaosDaemon.runtime=containerd --set chaosDaemon.socketPath=/run/containerd/containerd.sock --version 2.5.1
